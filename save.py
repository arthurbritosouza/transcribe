import os
import streamlit as st
from transcribe import transcribe_audio
# Configura√ß√µes da p√°gina
st.set_page_config(
    page_title="Transcri√ß√£o de √Åudio com Prompt",
    page_icon="üéôÔ∏è",
    layout="centered",
    initial_sidebar_state="collapsed",
)

# Cabe√ßalho
st.title("üéôÔ∏è Transcri√ß√£o de √Åudio com Prompt")

# Descri√ß√£o
st.markdown("""
Bem-vindo! Aqui voc√™ pode carregar um arquivo de √°udio, fornecer um prompt e obter a transcri√ß√£o do √°udio baseada no contexto fornecido.  
""")

# Upload do arquivo de √°udio
audio_file = st.file_uploader("Carregue seu arquivo de √°udio (MP3, WAV)", type=["mp3", "wav","ogg"])

# Campo para o prompt do usu√°rio
prompt = st.text_area("Digite seu prompt (opcional)", placeholder="Escreva um contexto ou instru√ß√£o para a transcri√ß√£o...")

# Bot√£o para processar
if st.button("Transcrever"):
    if audio_file:
        if audio_file is not None:
            os.makedirs("audios", exist_ok=True)
            name_file = os.path.join("audios", audio_file.name)
            # Salvar o arquivo no diret√≥rio local
            with open(name_file, "wb") as f:
                f.write(audio_file.getbuffer())  # Salva o arquivo no mesmo nome original
            st.success(f"Arquivo {name_file} salvo com sucesso!")
            
        st.info("üì§ Processando seu √°udio e prompt...")
        response = transcribe_audio(name_file, prompt)
        st.success("‚úÖ Transcri√ß√£o conclu√≠da!")
        st.write("Resultado da transcri√ß√£o:")
        st.write(response)
    else:
        st.warning("‚ö†Ô∏è Por favor, carregue um arquivo de √°udio antes de continuar.")
